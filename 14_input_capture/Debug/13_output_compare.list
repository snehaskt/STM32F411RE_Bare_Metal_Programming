
13_output_compare.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000bcc  08000198  08000198  00001198  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000014  08000d64  08000d64  00001d64  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08000d78  08000d78  0000205c  2**0
                  CONTENTS
  4 .ARM          00000000  08000d78  08000d78  0000205c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000d78  08000d78  0000205c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000d78  08000d78  00001d78  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08000d7c  08000d7c  00001d7c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         0000005c  20000000  08000d80  00002000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000016c  2000005c  08000ddc  0000205c  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200001c8  08000ddc  000021c8  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0000205c  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000e9c  00000000  00000000  0000208c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000417  00000000  00000000  00002f28  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000138  00000000  00000000  00003340  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 000000d2  00000000  00000000  00003478  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00001ef0  00000000  00000000  0000354a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00001afe  00000000  00000000  0000543a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000559b5  00000000  00000000  00006f38  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  0005c8ed  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000009f8  00000000  00000000  0005c930  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000060  00000000  00000000  0005d328  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000198 <__do_global_dtors_aux>:
 8000198:	b510      	push	{r4, lr}
 800019a:	4c05      	ldr	r4, [pc, #20]	@ (80001b0 <__do_global_dtors_aux+0x18>)
 800019c:	7823      	ldrb	r3, [r4, #0]
 800019e:	b933      	cbnz	r3, 80001ae <__do_global_dtors_aux+0x16>
 80001a0:	4b04      	ldr	r3, [pc, #16]	@ (80001b4 <__do_global_dtors_aux+0x1c>)
 80001a2:	b113      	cbz	r3, 80001aa <__do_global_dtors_aux+0x12>
 80001a4:	4804      	ldr	r0, [pc, #16]	@ (80001b8 <__do_global_dtors_aux+0x20>)
 80001a6:	f3af 8000 	nop.w
 80001aa:	2301      	movs	r3, #1
 80001ac:	7023      	strb	r3, [r4, #0]
 80001ae:	bd10      	pop	{r4, pc}
 80001b0:	2000005c 	.word	0x2000005c
 80001b4:	00000000 	.word	0x00000000
 80001b8:	08000d4c 	.word	0x08000d4c

080001bc <frame_dummy>:
 80001bc:	b508      	push	{r3, lr}
 80001be:	4b03      	ldr	r3, [pc, #12]	@ (80001cc <frame_dummy+0x10>)
 80001c0:	b11b      	cbz	r3, 80001ca <frame_dummy+0xe>
 80001c2:	4903      	ldr	r1, [pc, #12]	@ (80001d0 <frame_dummy+0x14>)
 80001c4:	4803      	ldr	r0, [pc, #12]	@ (80001d4 <frame_dummy+0x18>)
 80001c6:	f3af 8000 	nop.w
 80001ca:	bd08      	pop	{r3, pc}
 80001cc:	00000000 	.word	0x00000000
 80001d0:	20000060 	.word	0x20000060
 80001d4:	08000d4c 	.word	0x08000d4c

080001d8 <main>:
#define LED_PIN				PIN



int main(void)
{
 80001d8:	b580      	push	{r7, lr}
 80001da:	af00      	add	r7, sp, #0

	tim2_1hz_init();
 80001dc:	f000 f8c2 	bl	8000364 <tim2_1hz_init>

	while(1)
	{
		/*Wait for UIF (update intrupt falg)*/
		while(!(TIM2->SR & SR_UIF))
 80001e0:	e007      	b.n	80001f2 <main+0x1a>

		/*Clear UIF*/
			TIM2->SR &= ~SR_UIF;
 80001e2:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 80001e6:	691b      	ldr	r3, [r3, #16]
 80001e8:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 80001ec:	f023 0301 	bic.w	r3, r3, #1
 80001f0:	6113      	str	r3, [r2, #16]
		while(!(TIM2->SR & SR_UIF))
 80001f2:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 80001f6:	691b      	ldr	r3, [r3, #16]
 80001f8:	f003 0301 	and.w	r3, r3, #1
 80001fc:	2b00      	cmp	r3, #0
 80001fe:	d0f0      	beq.n	80001e2 <main+0xa>
		printf("A second passed!\n");
 8000200:	4804      	ldr	r0, [pc, #16]	@ (8000214 <main+0x3c>)
 8000202:	f000 fa0f 	bl	8000624 <puts>

		/*Toggle the LED*/
		GPIOA -> ODR ^= LED_PIN;
 8000206:	4b04      	ldr	r3, [pc, #16]	@ (8000218 <main+0x40>)
 8000208:	695b      	ldr	r3, [r3, #20]
 800020a:	4a03      	ldr	r2, [pc, #12]	@ (8000218 <main+0x40>)
 800020c:	f083 0320 	eor.w	r3, r3, #32
 8000210:	6153      	str	r3, [r2, #20]
		while(!(TIM2->SR & SR_UIF))
 8000212:	e7ee      	b.n	80001f2 <main+0x1a>
 8000214:	08000d64 	.word	0x08000d64
 8000218:	40020000 	.word	0x40020000

0800021c <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 800021c:	b580      	push	{r7, lr}
 800021e:	b086      	sub	sp, #24
 8000220:	af00      	add	r7, sp, #0
 8000222:	60f8      	str	r0, [r7, #12]
 8000224:	60b9      	str	r1, [r7, #8]
 8000226:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000228:	2300      	movs	r3, #0
 800022a:	617b      	str	r3, [r7, #20]
 800022c:	e00a      	b.n	8000244 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 800022e:	f3af 8000 	nop.w
 8000232:	4601      	mov	r1, r0
 8000234:	68bb      	ldr	r3, [r7, #8]
 8000236:	1c5a      	adds	r2, r3, #1
 8000238:	60ba      	str	r2, [r7, #8]
 800023a:	b2ca      	uxtb	r2, r1
 800023c:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800023e:	697b      	ldr	r3, [r7, #20]
 8000240:	3301      	adds	r3, #1
 8000242:	617b      	str	r3, [r7, #20]
 8000244:	697a      	ldr	r2, [r7, #20]
 8000246:	687b      	ldr	r3, [r7, #4]
 8000248:	429a      	cmp	r2, r3
 800024a:	dbf0      	blt.n	800022e <_read+0x12>
  }

  return len;
 800024c:	687b      	ldr	r3, [r7, #4]
}
 800024e:	4618      	mov	r0, r3
 8000250:	3718      	adds	r7, #24
 8000252:	46bd      	mov	sp, r7
 8000254:	bd80      	pop	{r7, pc}

08000256 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000256:	b580      	push	{r7, lr}
 8000258:	b086      	sub	sp, #24
 800025a:	af00      	add	r7, sp, #0
 800025c:	60f8      	str	r0, [r7, #12]
 800025e:	60b9      	str	r1, [r7, #8]
 8000260:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000262:	2300      	movs	r3, #0
 8000264:	617b      	str	r3, [r7, #20]
 8000266:	e009      	b.n	800027c <_write+0x26>
  {
    __io_putchar(*ptr++);
 8000268:	68bb      	ldr	r3, [r7, #8]
 800026a:	1c5a      	adds	r2, r3, #1
 800026c:	60ba      	str	r2, [r7, #8]
 800026e:	781b      	ldrb	r3, [r3, #0]
 8000270:	4618      	mov	r0, r3
 8000272:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000276:	697b      	ldr	r3, [r7, #20]
 8000278:	3301      	adds	r3, #1
 800027a:	617b      	str	r3, [r7, #20]
 800027c:	697a      	ldr	r2, [r7, #20]
 800027e:	687b      	ldr	r3, [r7, #4]
 8000280:	429a      	cmp	r2, r3
 8000282:	dbf1      	blt.n	8000268 <_write+0x12>
  }
  return len;
 8000284:	687b      	ldr	r3, [r7, #4]
}
 8000286:	4618      	mov	r0, r3
 8000288:	3718      	adds	r7, #24
 800028a:	46bd      	mov	sp, r7
 800028c:	bd80      	pop	{r7, pc}

0800028e <_close>:

int _close(int file)
{
 800028e:	b480      	push	{r7}
 8000290:	b083      	sub	sp, #12
 8000292:	af00      	add	r7, sp, #0
 8000294:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8000296:	f04f 33ff 	mov.w	r3, #4294967295
}
 800029a:	4618      	mov	r0, r3
 800029c:	370c      	adds	r7, #12
 800029e:	46bd      	mov	sp, r7
 80002a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002a4:	4770      	bx	lr

080002a6 <_fstat>:


int _fstat(int file, struct stat *st)
{
 80002a6:	b480      	push	{r7}
 80002a8:	b083      	sub	sp, #12
 80002aa:	af00      	add	r7, sp, #0
 80002ac:	6078      	str	r0, [r7, #4]
 80002ae:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 80002b0:	683b      	ldr	r3, [r7, #0]
 80002b2:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 80002b6:	605a      	str	r2, [r3, #4]
  return 0;
 80002b8:	2300      	movs	r3, #0
}
 80002ba:	4618      	mov	r0, r3
 80002bc:	370c      	adds	r7, #12
 80002be:	46bd      	mov	sp, r7
 80002c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002c4:	4770      	bx	lr

080002c6 <_isatty>:

int _isatty(int file)
{
 80002c6:	b480      	push	{r7}
 80002c8:	b083      	sub	sp, #12
 80002ca:	af00      	add	r7, sp, #0
 80002cc:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 80002ce:	2301      	movs	r3, #1
}
 80002d0:	4618      	mov	r0, r3
 80002d2:	370c      	adds	r7, #12
 80002d4:	46bd      	mov	sp, r7
 80002d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002da:	4770      	bx	lr

080002dc <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80002dc:	b480      	push	{r7}
 80002de:	b085      	sub	sp, #20
 80002e0:	af00      	add	r7, sp, #0
 80002e2:	60f8      	str	r0, [r7, #12]
 80002e4:	60b9      	str	r1, [r7, #8]
 80002e6:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 80002e8:	2300      	movs	r3, #0
}
 80002ea:	4618      	mov	r0, r3
 80002ec:	3714      	adds	r7, #20
 80002ee:	46bd      	mov	sp, r7
 80002f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002f4:	4770      	bx	lr
	...

080002f8 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80002f8:	b580      	push	{r7, lr}
 80002fa:	b086      	sub	sp, #24
 80002fc:	af00      	add	r7, sp, #0
 80002fe:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000300:	4a14      	ldr	r2, [pc, #80]	@ (8000354 <_sbrk+0x5c>)
 8000302:	4b15      	ldr	r3, [pc, #84]	@ (8000358 <_sbrk+0x60>)
 8000304:	1ad3      	subs	r3, r2, r3
 8000306:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000308:	697b      	ldr	r3, [r7, #20]
 800030a:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 800030c:	4b13      	ldr	r3, [pc, #76]	@ (800035c <_sbrk+0x64>)
 800030e:	681b      	ldr	r3, [r3, #0]
 8000310:	2b00      	cmp	r3, #0
 8000312:	d102      	bne.n	800031a <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000314:	4b11      	ldr	r3, [pc, #68]	@ (800035c <_sbrk+0x64>)
 8000316:	4a12      	ldr	r2, [pc, #72]	@ (8000360 <_sbrk+0x68>)
 8000318:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800031a:	4b10      	ldr	r3, [pc, #64]	@ (800035c <_sbrk+0x64>)
 800031c:	681a      	ldr	r2, [r3, #0]
 800031e:	687b      	ldr	r3, [r7, #4]
 8000320:	4413      	add	r3, r2
 8000322:	693a      	ldr	r2, [r7, #16]
 8000324:	429a      	cmp	r2, r3
 8000326:	d207      	bcs.n	8000338 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000328:	f000 faaa 	bl	8000880 <__errno>
 800032c:	4603      	mov	r3, r0
 800032e:	220c      	movs	r2, #12
 8000330:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8000332:	f04f 33ff 	mov.w	r3, #4294967295
 8000336:	e009      	b.n	800034c <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000338:	4b08      	ldr	r3, [pc, #32]	@ (800035c <_sbrk+0x64>)
 800033a:	681b      	ldr	r3, [r3, #0]
 800033c:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800033e:	4b07      	ldr	r3, [pc, #28]	@ (800035c <_sbrk+0x64>)
 8000340:	681a      	ldr	r2, [r3, #0]
 8000342:	687b      	ldr	r3, [r7, #4]
 8000344:	4413      	add	r3, r2
 8000346:	4a05      	ldr	r2, [pc, #20]	@ (800035c <_sbrk+0x64>)
 8000348:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800034a:	68fb      	ldr	r3, [r7, #12]
}
 800034c:	4618      	mov	r0, r3
 800034e:	3718      	adds	r7, #24
 8000350:	46bd      	mov	sp, r7
 8000352:	bd80      	pop	{r7, pc}
 8000354:	20020000 	.word	0x20020000
 8000358:	00000400 	.word	0x00000400
 800035c:	20000078 	.word	0x20000078
 8000360:	200001c8 	.word	0x200001c8

08000364 <tim2_1hz_init>:

#define GPIOAEN			(1U<<0)
#define AFR5_TIM			(1U<<20)

void tim2_1hz_init(void)
{
 8000364:	b480      	push	{r7}
 8000366:	af00      	add	r7, sp, #0
	/*Enable clock access to tim2*/
	RCC-> APB1ENR |= TIM2EN;
 8000368:	4b0c      	ldr	r3, [pc, #48]	@ (800039c <tim2_1hz_init+0x38>)
 800036a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800036c:	4a0b      	ldr	r2, [pc, #44]	@ (800039c <tim2_1hz_init+0x38>)
 800036e:	f043 0301 	orr.w	r3, r3, #1
 8000372:	6413      	str	r3, [r2, #64]	@ 0x40

	/*Set prescaler value*/
	TIM2 -> PSC = 1600-1;
 8000374:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8000378:	f240 623f 	movw	r2, #1599	@ 0x63f
 800037c:	629a      	str	r2, [r3, #40]	@ 0x28
	//16000000/1600 = 10000

	/*clear counter*/
	TIM2 -> ARR = 10000-1;
 800037e:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8000382:	f242 720f 	movw	r2, #9999	@ 0x270f
 8000386:	62da      	str	r2, [r3, #44]	@ 0x2c
	//10000/10000 = 1

	/*Enable timer*/
	TIM2 -> CR1 = CR1_CEN;
 8000388:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 800038c:	2201      	movs	r2, #1
 800038e:	601a      	str	r2, [r3, #0]

}
 8000390:	bf00      	nop
 8000392:	46bd      	mov	sp, r7
 8000394:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000398:	4770      	bx	lr
 800039a:	bf00      	nop
 800039c:	40023800 	.word	0x40023800

080003a0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80003a0:	480d      	ldr	r0, [pc, #52]	@ (80003d8 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80003a2:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80003a4:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80003a8:	480c      	ldr	r0, [pc, #48]	@ (80003dc <LoopForever+0x6>)
  ldr r1, =_edata
 80003aa:	490d      	ldr	r1, [pc, #52]	@ (80003e0 <LoopForever+0xa>)
  ldr r2, =_sidata
 80003ac:	4a0d      	ldr	r2, [pc, #52]	@ (80003e4 <LoopForever+0xe>)
  movs r3, #0
 80003ae:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80003b0:	e002      	b.n	80003b8 <LoopCopyDataInit>

080003b2 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80003b2:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80003b4:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80003b6:	3304      	adds	r3, #4

080003b8 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80003b8:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80003ba:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80003bc:	d3f9      	bcc.n	80003b2 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80003be:	4a0a      	ldr	r2, [pc, #40]	@ (80003e8 <LoopForever+0x12>)
  ldr r4, =_ebss
 80003c0:	4c0a      	ldr	r4, [pc, #40]	@ (80003ec <LoopForever+0x16>)
  movs r3, #0
 80003c2:	2300      	movs	r3, #0
  b LoopFillZerobss
 80003c4:	e001      	b.n	80003ca <LoopFillZerobss>

080003c6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80003c6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80003c8:	3204      	adds	r2, #4

080003ca <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80003ca:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80003cc:	d3fb      	bcc.n	80003c6 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80003ce:	f000 fa5d 	bl	800088c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80003d2:	f7ff ff01 	bl	80001d8 <main>

080003d6 <LoopForever>:

LoopForever:
  b LoopForever
 80003d6:	e7fe      	b.n	80003d6 <LoopForever>
  ldr   r0, =_estack
 80003d8:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80003dc:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80003e0:	2000005c 	.word	0x2000005c
  ldr r2, =_sidata
 80003e4:	08000d80 	.word	0x08000d80
  ldr r2, =_sbss
 80003e8:	2000005c 	.word	0x2000005c
  ldr r4, =_ebss
 80003ec:	200001c8 	.word	0x200001c8

080003f0 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80003f0:	e7fe      	b.n	80003f0 <ADC_IRQHandler>
	...

080003f4 <std>:
 80003f4:	2300      	movs	r3, #0
 80003f6:	b510      	push	{r4, lr}
 80003f8:	4604      	mov	r4, r0
 80003fa:	e9c0 3300 	strd	r3, r3, [r0]
 80003fe:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000402:	6083      	str	r3, [r0, #8]
 8000404:	8181      	strh	r1, [r0, #12]
 8000406:	6643      	str	r3, [r0, #100]	@ 0x64
 8000408:	81c2      	strh	r2, [r0, #14]
 800040a:	6183      	str	r3, [r0, #24]
 800040c:	4619      	mov	r1, r3
 800040e:	2208      	movs	r2, #8
 8000410:	305c      	adds	r0, #92	@ 0x5c
 8000412:	f000 f9e7 	bl	80007e4 <memset>
 8000416:	4b0d      	ldr	r3, [pc, #52]	@ (800044c <std+0x58>)
 8000418:	6263      	str	r3, [r4, #36]	@ 0x24
 800041a:	4b0d      	ldr	r3, [pc, #52]	@ (8000450 <std+0x5c>)
 800041c:	62a3      	str	r3, [r4, #40]	@ 0x28
 800041e:	4b0d      	ldr	r3, [pc, #52]	@ (8000454 <std+0x60>)
 8000420:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8000422:	4b0d      	ldr	r3, [pc, #52]	@ (8000458 <std+0x64>)
 8000424:	6323      	str	r3, [r4, #48]	@ 0x30
 8000426:	4b0d      	ldr	r3, [pc, #52]	@ (800045c <std+0x68>)
 8000428:	6224      	str	r4, [r4, #32]
 800042a:	429c      	cmp	r4, r3
 800042c:	d006      	beq.n	800043c <std+0x48>
 800042e:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8000432:	4294      	cmp	r4, r2
 8000434:	d002      	beq.n	800043c <std+0x48>
 8000436:	33d0      	adds	r3, #208	@ 0xd0
 8000438:	429c      	cmp	r4, r3
 800043a:	d105      	bne.n	8000448 <std+0x54>
 800043c:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8000440:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000444:	f000 ba46 	b.w	80008d4 <__retarget_lock_init_recursive>
 8000448:	bd10      	pop	{r4, pc}
 800044a:	bf00      	nop
 800044c:	08000635 	.word	0x08000635
 8000450:	08000657 	.word	0x08000657
 8000454:	0800068f 	.word	0x0800068f
 8000458:	080006b3 	.word	0x080006b3
 800045c:	2000007c 	.word	0x2000007c

08000460 <stdio_exit_handler>:
 8000460:	4a02      	ldr	r2, [pc, #8]	@ (800046c <stdio_exit_handler+0xc>)
 8000462:	4903      	ldr	r1, [pc, #12]	@ (8000470 <stdio_exit_handler+0x10>)
 8000464:	4803      	ldr	r0, [pc, #12]	@ (8000474 <stdio_exit_handler+0x14>)
 8000466:	f000 b869 	b.w	800053c <_fwalk_sglue>
 800046a:	bf00      	nop
 800046c:	20000000 	.word	0x20000000
 8000470:	08000bd5 	.word	0x08000bd5
 8000474:	20000010 	.word	0x20000010

08000478 <cleanup_stdio>:
 8000478:	6841      	ldr	r1, [r0, #4]
 800047a:	4b0c      	ldr	r3, [pc, #48]	@ (80004ac <cleanup_stdio+0x34>)
 800047c:	4299      	cmp	r1, r3
 800047e:	b510      	push	{r4, lr}
 8000480:	4604      	mov	r4, r0
 8000482:	d001      	beq.n	8000488 <cleanup_stdio+0x10>
 8000484:	f000 fba6 	bl	8000bd4 <_fflush_r>
 8000488:	68a1      	ldr	r1, [r4, #8]
 800048a:	4b09      	ldr	r3, [pc, #36]	@ (80004b0 <cleanup_stdio+0x38>)
 800048c:	4299      	cmp	r1, r3
 800048e:	d002      	beq.n	8000496 <cleanup_stdio+0x1e>
 8000490:	4620      	mov	r0, r4
 8000492:	f000 fb9f 	bl	8000bd4 <_fflush_r>
 8000496:	68e1      	ldr	r1, [r4, #12]
 8000498:	4b06      	ldr	r3, [pc, #24]	@ (80004b4 <cleanup_stdio+0x3c>)
 800049a:	4299      	cmp	r1, r3
 800049c:	d004      	beq.n	80004a8 <cleanup_stdio+0x30>
 800049e:	4620      	mov	r0, r4
 80004a0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80004a4:	f000 bb96 	b.w	8000bd4 <_fflush_r>
 80004a8:	bd10      	pop	{r4, pc}
 80004aa:	bf00      	nop
 80004ac:	2000007c 	.word	0x2000007c
 80004b0:	200000e4 	.word	0x200000e4
 80004b4:	2000014c 	.word	0x2000014c

080004b8 <global_stdio_init.part.0>:
 80004b8:	b510      	push	{r4, lr}
 80004ba:	4b0b      	ldr	r3, [pc, #44]	@ (80004e8 <global_stdio_init.part.0+0x30>)
 80004bc:	4c0b      	ldr	r4, [pc, #44]	@ (80004ec <global_stdio_init.part.0+0x34>)
 80004be:	4a0c      	ldr	r2, [pc, #48]	@ (80004f0 <global_stdio_init.part.0+0x38>)
 80004c0:	601a      	str	r2, [r3, #0]
 80004c2:	4620      	mov	r0, r4
 80004c4:	2200      	movs	r2, #0
 80004c6:	2104      	movs	r1, #4
 80004c8:	f7ff ff94 	bl	80003f4 <std>
 80004cc:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 80004d0:	2201      	movs	r2, #1
 80004d2:	2109      	movs	r1, #9
 80004d4:	f7ff ff8e 	bl	80003f4 <std>
 80004d8:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 80004dc:	2202      	movs	r2, #2
 80004de:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80004e2:	2112      	movs	r1, #18
 80004e4:	f7ff bf86 	b.w	80003f4 <std>
 80004e8:	200001b4 	.word	0x200001b4
 80004ec:	2000007c 	.word	0x2000007c
 80004f0:	08000461 	.word	0x08000461

080004f4 <__sfp_lock_acquire>:
 80004f4:	4801      	ldr	r0, [pc, #4]	@ (80004fc <__sfp_lock_acquire+0x8>)
 80004f6:	f000 b9ee 	b.w	80008d6 <__retarget_lock_acquire_recursive>
 80004fa:	bf00      	nop
 80004fc:	200001bd 	.word	0x200001bd

08000500 <__sfp_lock_release>:
 8000500:	4801      	ldr	r0, [pc, #4]	@ (8000508 <__sfp_lock_release+0x8>)
 8000502:	f000 b9e9 	b.w	80008d8 <__retarget_lock_release_recursive>
 8000506:	bf00      	nop
 8000508:	200001bd 	.word	0x200001bd

0800050c <__sinit>:
 800050c:	b510      	push	{r4, lr}
 800050e:	4604      	mov	r4, r0
 8000510:	f7ff fff0 	bl	80004f4 <__sfp_lock_acquire>
 8000514:	6a23      	ldr	r3, [r4, #32]
 8000516:	b11b      	cbz	r3, 8000520 <__sinit+0x14>
 8000518:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800051c:	f7ff bff0 	b.w	8000500 <__sfp_lock_release>
 8000520:	4b04      	ldr	r3, [pc, #16]	@ (8000534 <__sinit+0x28>)
 8000522:	6223      	str	r3, [r4, #32]
 8000524:	4b04      	ldr	r3, [pc, #16]	@ (8000538 <__sinit+0x2c>)
 8000526:	681b      	ldr	r3, [r3, #0]
 8000528:	2b00      	cmp	r3, #0
 800052a:	d1f5      	bne.n	8000518 <__sinit+0xc>
 800052c:	f7ff ffc4 	bl	80004b8 <global_stdio_init.part.0>
 8000530:	e7f2      	b.n	8000518 <__sinit+0xc>
 8000532:	bf00      	nop
 8000534:	08000479 	.word	0x08000479
 8000538:	200001b4 	.word	0x200001b4

0800053c <_fwalk_sglue>:
 800053c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000540:	4607      	mov	r7, r0
 8000542:	4688      	mov	r8, r1
 8000544:	4614      	mov	r4, r2
 8000546:	2600      	movs	r6, #0
 8000548:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 800054c:	f1b9 0901 	subs.w	r9, r9, #1
 8000550:	d505      	bpl.n	800055e <_fwalk_sglue+0x22>
 8000552:	6824      	ldr	r4, [r4, #0]
 8000554:	2c00      	cmp	r4, #0
 8000556:	d1f7      	bne.n	8000548 <_fwalk_sglue+0xc>
 8000558:	4630      	mov	r0, r6
 800055a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800055e:	89ab      	ldrh	r3, [r5, #12]
 8000560:	2b01      	cmp	r3, #1
 8000562:	d907      	bls.n	8000574 <_fwalk_sglue+0x38>
 8000564:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000568:	3301      	adds	r3, #1
 800056a:	d003      	beq.n	8000574 <_fwalk_sglue+0x38>
 800056c:	4629      	mov	r1, r5
 800056e:	4638      	mov	r0, r7
 8000570:	47c0      	blx	r8
 8000572:	4306      	orrs	r6, r0
 8000574:	3568      	adds	r5, #104	@ 0x68
 8000576:	e7e9      	b.n	800054c <_fwalk_sglue+0x10>

08000578 <_puts_r>:
 8000578:	6a03      	ldr	r3, [r0, #32]
 800057a:	b570      	push	{r4, r5, r6, lr}
 800057c:	6884      	ldr	r4, [r0, #8]
 800057e:	4605      	mov	r5, r0
 8000580:	460e      	mov	r6, r1
 8000582:	b90b      	cbnz	r3, 8000588 <_puts_r+0x10>
 8000584:	f7ff ffc2 	bl	800050c <__sinit>
 8000588:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 800058a:	07db      	lsls	r3, r3, #31
 800058c:	d405      	bmi.n	800059a <_puts_r+0x22>
 800058e:	89a3      	ldrh	r3, [r4, #12]
 8000590:	0598      	lsls	r0, r3, #22
 8000592:	d402      	bmi.n	800059a <_puts_r+0x22>
 8000594:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8000596:	f000 f99e 	bl	80008d6 <__retarget_lock_acquire_recursive>
 800059a:	89a3      	ldrh	r3, [r4, #12]
 800059c:	0719      	lsls	r1, r3, #28
 800059e:	d502      	bpl.n	80005a6 <_puts_r+0x2e>
 80005a0:	6923      	ldr	r3, [r4, #16]
 80005a2:	2b00      	cmp	r3, #0
 80005a4:	d135      	bne.n	8000612 <_puts_r+0x9a>
 80005a6:	4621      	mov	r1, r4
 80005a8:	4628      	mov	r0, r5
 80005aa:	f000 f8c5 	bl	8000738 <__swsetup_r>
 80005ae:	b380      	cbz	r0, 8000612 <_puts_r+0x9a>
 80005b0:	f04f 35ff 	mov.w	r5, #4294967295
 80005b4:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 80005b6:	07da      	lsls	r2, r3, #31
 80005b8:	d405      	bmi.n	80005c6 <_puts_r+0x4e>
 80005ba:	89a3      	ldrh	r3, [r4, #12]
 80005bc:	059b      	lsls	r3, r3, #22
 80005be:	d402      	bmi.n	80005c6 <_puts_r+0x4e>
 80005c0:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80005c2:	f000 f989 	bl	80008d8 <__retarget_lock_release_recursive>
 80005c6:	4628      	mov	r0, r5
 80005c8:	bd70      	pop	{r4, r5, r6, pc}
 80005ca:	2b00      	cmp	r3, #0
 80005cc:	da04      	bge.n	80005d8 <_puts_r+0x60>
 80005ce:	69a2      	ldr	r2, [r4, #24]
 80005d0:	429a      	cmp	r2, r3
 80005d2:	dc17      	bgt.n	8000604 <_puts_r+0x8c>
 80005d4:	290a      	cmp	r1, #10
 80005d6:	d015      	beq.n	8000604 <_puts_r+0x8c>
 80005d8:	6823      	ldr	r3, [r4, #0]
 80005da:	1c5a      	adds	r2, r3, #1
 80005dc:	6022      	str	r2, [r4, #0]
 80005de:	7019      	strb	r1, [r3, #0]
 80005e0:	68a3      	ldr	r3, [r4, #8]
 80005e2:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 80005e6:	3b01      	subs	r3, #1
 80005e8:	60a3      	str	r3, [r4, #8]
 80005ea:	2900      	cmp	r1, #0
 80005ec:	d1ed      	bne.n	80005ca <_puts_r+0x52>
 80005ee:	2b00      	cmp	r3, #0
 80005f0:	da11      	bge.n	8000616 <_puts_r+0x9e>
 80005f2:	4622      	mov	r2, r4
 80005f4:	210a      	movs	r1, #10
 80005f6:	4628      	mov	r0, r5
 80005f8:	f000 f85f 	bl	80006ba <__swbuf_r>
 80005fc:	3001      	adds	r0, #1
 80005fe:	d0d7      	beq.n	80005b0 <_puts_r+0x38>
 8000600:	250a      	movs	r5, #10
 8000602:	e7d7      	b.n	80005b4 <_puts_r+0x3c>
 8000604:	4622      	mov	r2, r4
 8000606:	4628      	mov	r0, r5
 8000608:	f000 f857 	bl	80006ba <__swbuf_r>
 800060c:	3001      	adds	r0, #1
 800060e:	d1e7      	bne.n	80005e0 <_puts_r+0x68>
 8000610:	e7ce      	b.n	80005b0 <_puts_r+0x38>
 8000612:	3e01      	subs	r6, #1
 8000614:	e7e4      	b.n	80005e0 <_puts_r+0x68>
 8000616:	6823      	ldr	r3, [r4, #0]
 8000618:	1c5a      	adds	r2, r3, #1
 800061a:	6022      	str	r2, [r4, #0]
 800061c:	220a      	movs	r2, #10
 800061e:	701a      	strb	r2, [r3, #0]
 8000620:	e7ee      	b.n	8000600 <_puts_r+0x88>
	...

08000624 <puts>:
 8000624:	4b02      	ldr	r3, [pc, #8]	@ (8000630 <puts+0xc>)
 8000626:	4601      	mov	r1, r0
 8000628:	6818      	ldr	r0, [r3, #0]
 800062a:	f7ff bfa5 	b.w	8000578 <_puts_r>
 800062e:	bf00      	nop
 8000630:	2000000c 	.word	0x2000000c

08000634 <__sread>:
 8000634:	b510      	push	{r4, lr}
 8000636:	460c      	mov	r4, r1
 8000638:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800063c:	f000 f8fc 	bl	8000838 <_read_r>
 8000640:	2800      	cmp	r0, #0
 8000642:	bfab      	itete	ge
 8000644:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 8000646:	89a3      	ldrhlt	r3, [r4, #12]
 8000648:	181b      	addge	r3, r3, r0
 800064a:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 800064e:	bfac      	ite	ge
 8000650:	6563      	strge	r3, [r4, #84]	@ 0x54
 8000652:	81a3      	strhlt	r3, [r4, #12]
 8000654:	bd10      	pop	{r4, pc}

08000656 <__swrite>:
 8000656:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800065a:	461f      	mov	r7, r3
 800065c:	898b      	ldrh	r3, [r1, #12]
 800065e:	05db      	lsls	r3, r3, #23
 8000660:	4605      	mov	r5, r0
 8000662:	460c      	mov	r4, r1
 8000664:	4616      	mov	r6, r2
 8000666:	d505      	bpl.n	8000674 <__swrite+0x1e>
 8000668:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800066c:	2302      	movs	r3, #2
 800066e:	2200      	movs	r2, #0
 8000670:	f000 f8d0 	bl	8000814 <_lseek_r>
 8000674:	89a3      	ldrh	r3, [r4, #12]
 8000676:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800067a:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 800067e:	81a3      	strh	r3, [r4, #12]
 8000680:	4632      	mov	r2, r6
 8000682:	463b      	mov	r3, r7
 8000684:	4628      	mov	r0, r5
 8000686:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800068a:	f000 b8e7 	b.w	800085c <_write_r>

0800068e <__sseek>:
 800068e:	b510      	push	{r4, lr}
 8000690:	460c      	mov	r4, r1
 8000692:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000696:	f000 f8bd 	bl	8000814 <_lseek_r>
 800069a:	1c43      	adds	r3, r0, #1
 800069c:	89a3      	ldrh	r3, [r4, #12]
 800069e:	bf15      	itete	ne
 80006a0:	6560      	strne	r0, [r4, #84]	@ 0x54
 80006a2:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 80006a6:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 80006aa:	81a3      	strheq	r3, [r4, #12]
 80006ac:	bf18      	it	ne
 80006ae:	81a3      	strhne	r3, [r4, #12]
 80006b0:	bd10      	pop	{r4, pc}

080006b2 <__sclose>:
 80006b2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80006b6:	f000 b89d 	b.w	80007f4 <_close_r>

080006ba <__swbuf_r>:
 80006ba:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80006bc:	460e      	mov	r6, r1
 80006be:	4614      	mov	r4, r2
 80006c0:	4605      	mov	r5, r0
 80006c2:	b118      	cbz	r0, 80006cc <__swbuf_r+0x12>
 80006c4:	6a03      	ldr	r3, [r0, #32]
 80006c6:	b90b      	cbnz	r3, 80006cc <__swbuf_r+0x12>
 80006c8:	f7ff ff20 	bl	800050c <__sinit>
 80006cc:	69a3      	ldr	r3, [r4, #24]
 80006ce:	60a3      	str	r3, [r4, #8]
 80006d0:	89a3      	ldrh	r3, [r4, #12]
 80006d2:	071a      	lsls	r2, r3, #28
 80006d4:	d501      	bpl.n	80006da <__swbuf_r+0x20>
 80006d6:	6923      	ldr	r3, [r4, #16]
 80006d8:	b943      	cbnz	r3, 80006ec <__swbuf_r+0x32>
 80006da:	4621      	mov	r1, r4
 80006dc:	4628      	mov	r0, r5
 80006de:	f000 f82b 	bl	8000738 <__swsetup_r>
 80006e2:	b118      	cbz	r0, 80006ec <__swbuf_r+0x32>
 80006e4:	f04f 37ff 	mov.w	r7, #4294967295
 80006e8:	4638      	mov	r0, r7
 80006ea:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80006ec:	6823      	ldr	r3, [r4, #0]
 80006ee:	6922      	ldr	r2, [r4, #16]
 80006f0:	1a98      	subs	r0, r3, r2
 80006f2:	6963      	ldr	r3, [r4, #20]
 80006f4:	b2f6      	uxtb	r6, r6
 80006f6:	4283      	cmp	r3, r0
 80006f8:	4637      	mov	r7, r6
 80006fa:	dc05      	bgt.n	8000708 <__swbuf_r+0x4e>
 80006fc:	4621      	mov	r1, r4
 80006fe:	4628      	mov	r0, r5
 8000700:	f000 fa68 	bl	8000bd4 <_fflush_r>
 8000704:	2800      	cmp	r0, #0
 8000706:	d1ed      	bne.n	80006e4 <__swbuf_r+0x2a>
 8000708:	68a3      	ldr	r3, [r4, #8]
 800070a:	3b01      	subs	r3, #1
 800070c:	60a3      	str	r3, [r4, #8]
 800070e:	6823      	ldr	r3, [r4, #0]
 8000710:	1c5a      	adds	r2, r3, #1
 8000712:	6022      	str	r2, [r4, #0]
 8000714:	701e      	strb	r6, [r3, #0]
 8000716:	6962      	ldr	r2, [r4, #20]
 8000718:	1c43      	adds	r3, r0, #1
 800071a:	429a      	cmp	r2, r3
 800071c:	d004      	beq.n	8000728 <__swbuf_r+0x6e>
 800071e:	89a3      	ldrh	r3, [r4, #12]
 8000720:	07db      	lsls	r3, r3, #31
 8000722:	d5e1      	bpl.n	80006e8 <__swbuf_r+0x2e>
 8000724:	2e0a      	cmp	r6, #10
 8000726:	d1df      	bne.n	80006e8 <__swbuf_r+0x2e>
 8000728:	4621      	mov	r1, r4
 800072a:	4628      	mov	r0, r5
 800072c:	f000 fa52 	bl	8000bd4 <_fflush_r>
 8000730:	2800      	cmp	r0, #0
 8000732:	d0d9      	beq.n	80006e8 <__swbuf_r+0x2e>
 8000734:	e7d6      	b.n	80006e4 <__swbuf_r+0x2a>
	...

08000738 <__swsetup_r>:
 8000738:	b538      	push	{r3, r4, r5, lr}
 800073a:	4b29      	ldr	r3, [pc, #164]	@ (80007e0 <__swsetup_r+0xa8>)
 800073c:	4605      	mov	r5, r0
 800073e:	6818      	ldr	r0, [r3, #0]
 8000740:	460c      	mov	r4, r1
 8000742:	b118      	cbz	r0, 800074c <__swsetup_r+0x14>
 8000744:	6a03      	ldr	r3, [r0, #32]
 8000746:	b90b      	cbnz	r3, 800074c <__swsetup_r+0x14>
 8000748:	f7ff fee0 	bl	800050c <__sinit>
 800074c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000750:	0719      	lsls	r1, r3, #28
 8000752:	d422      	bmi.n	800079a <__swsetup_r+0x62>
 8000754:	06da      	lsls	r2, r3, #27
 8000756:	d407      	bmi.n	8000768 <__swsetup_r+0x30>
 8000758:	2209      	movs	r2, #9
 800075a:	602a      	str	r2, [r5, #0]
 800075c:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000760:	81a3      	strh	r3, [r4, #12]
 8000762:	f04f 30ff 	mov.w	r0, #4294967295
 8000766:	e033      	b.n	80007d0 <__swsetup_r+0x98>
 8000768:	0758      	lsls	r0, r3, #29
 800076a:	d512      	bpl.n	8000792 <__swsetup_r+0x5a>
 800076c:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 800076e:	b141      	cbz	r1, 8000782 <__swsetup_r+0x4a>
 8000770:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8000774:	4299      	cmp	r1, r3
 8000776:	d002      	beq.n	800077e <__swsetup_r+0x46>
 8000778:	4628      	mov	r0, r5
 800077a:	f000 f8af 	bl	80008dc <_free_r>
 800077e:	2300      	movs	r3, #0
 8000780:	6363      	str	r3, [r4, #52]	@ 0x34
 8000782:	89a3      	ldrh	r3, [r4, #12]
 8000784:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8000788:	81a3      	strh	r3, [r4, #12]
 800078a:	2300      	movs	r3, #0
 800078c:	6063      	str	r3, [r4, #4]
 800078e:	6923      	ldr	r3, [r4, #16]
 8000790:	6023      	str	r3, [r4, #0]
 8000792:	89a3      	ldrh	r3, [r4, #12]
 8000794:	f043 0308 	orr.w	r3, r3, #8
 8000798:	81a3      	strh	r3, [r4, #12]
 800079a:	6923      	ldr	r3, [r4, #16]
 800079c:	b94b      	cbnz	r3, 80007b2 <__swsetup_r+0x7a>
 800079e:	89a3      	ldrh	r3, [r4, #12]
 80007a0:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 80007a4:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 80007a8:	d003      	beq.n	80007b2 <__swsetup_r+0x7a>
 80007aa:	4621      	mov	r1, r4
 80007ac:	4628      	mov	r0, r5
 80007ae:	f000 fa5f 	bl	8000c70 <__smakebuf_r>
 80007b2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80007b6:	f013 0201 	ands.w	r2, r3, #1
 80007ba:	d00a      	beq.n	80007d2 <__swsetup_r+0x9a>
 80007bc:	2200      	movs	r2, #0
 80007be:	60a2      	str	r2, [r4, #8]
 80007c0:	6962      	ldr	r2, [r4, #20]
 80007c2:	4252      	negs	r2, r2
 80007c4:	61a2      	str	r2, [r4, #24]
 80007c6:	6922      	ldr	r2, [r4, #16]
 80007c8:	b942      	cbnz	r2, 80007dc <__swsetup_r+0xa4>
 80007ca:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 80007ce:	d1c5      	bne.n	800075c <__swsetup_r+0x24>
 80007d0:	bd38      	pop	{r3, r4, r5, pc}
 80007d2:	0799      	lsls	r1, r3, #30
 80007d4:	bf58      	it	pl
 80007d6:	6962      	ldrpl	r2, [r4, #20]
 80007d8:	60a2      	str	r2, [r4, #8]
 80007da:	e7f4      	b.n	80007c6 <__swsetup_r+0x8e>
 80007dc:	2000      	movs	r0, #0
 80007de:	e7f7      	b.n	80007d0 <__swsetup_r+0x98>
 80007e0:	2000000c 	.word	0x2000000c

080007e4 <memset>:
 80007e4:	4402      	add	r2, r0
 80007e6:	4603      	mov	r3, r0
 80007e8:	4293      	cmp	r3, r2
 80007ea:	d100      	bne.n	80007ee <memset+0xa>
 80007ec:	4770      	bx	lr
 80007ee:	f803 1b01 	strb.w	r1, [r3], #1
 80007f2:	e7f9      	b.n	80007e8 <memset+0x4>

080007f4 <_close_r>:
 80007f4:	b538      	push	{r3, r4, r5, lr}
 80007f6:	4d06      	ldr	r5, [pc, #24]	@ (8000810 <_close_r+0x1c>)
 80007f8:	2300      	movs	r3, #0
 80007fa:	4604      	mov	r4, r0
 80007fc:	4608      	mov	r0, r1
 80007fe:	602b      	str	r3, [r5, #0]
 8000800:	f7ff fd45 	bl	800028e <_close>
 8000804:	1c43      	adds	r3, r0, #1
 8000806:	d102      	bne.n	800080e <_close_r+0x1a>
 8000808:	682b      	ldr	r3, [r5, #0]
 800080a:	b103      	cbz	r3, 800080e <_close_r+0x1a>
 800080c:	6023      	str	r3, [r4, #0]
 800080e:	bd38      	pop	{r3, r4, r5, pc}
 8000810:	200001b8 	.word	0x200001b8

08000814 <_lseek_r>:
 8000814:	b538      	push	{r3, r4, r5, lr}
 8000816:	4d07      	ldr	r5, [pc, #28]	@ (8000834 <_lseek_r+0x20>)
 8000818:	4604      	mov	r4, r0
 800081a:	4608      	mov	r0, r1
 800081c:	4611      	mov	r1, r2
 800081e:	2200      	movs	r2, #0
 8000820:	602a      	str	r2, [r5, #0]
 8000822:	461a      	mov	r2, r3
 8000824:	f7ff fd5a 	bl	80002dc <_lseek>
 8000828:	1c43      	adds	r3, r0, #1
 800082a:	d102      	bne.n	8000832 <_lseek_r+0x1e>
 800082c:	682b      	ldr	r3, [r5, #0]
 800082e:	b103      	cbz	r3, 8000832 <_lseek_r+0x1e>
 8000830:	6023      	str	r3, [r4, #0]
 8000832:	bd38      	pop	{r3, r4, r5, pc}
 8000834:	200001b8 	.word	0x200001b8

08000838 <_read_r>:
 8000838:	b538      	push	{r3, r4, r5, lr}
 800083a:	4d07      	ldr	r5, [pc, #28]	@ (8000858 <_read_r+0x20>)
 800083c:	4604      	mov	r4, r0
 800083e:	4608      	mov	r0, r1
 8000840:	4611      	mov	r1, r2
 8000842:	2200      	movs	r2, #0
 8000844:	602a      	str	r2, [r5, #0]
 8000846:	461a      	mov	r2, r3
 8000848:	f7ff fce8 	bl	800021c <_read>
 800084c:	1c43      	adds	r3, r0, #1
 800084e:	d102      	bne.n	8000856 <_read_r+0x1e>
 8000850:	682b      	ldr	r3, [r5, #0]
 8000852:	b103      	cbz	r3, 8000856 <_read_r+0x1e>
 8000854:	6023      	str	r3, [r4, #0]
 8000856:	bd38      	pop	{r3, r4, r5, pc}
 8000858:	200001b8 	.word	0x200001b8

0800085c <_write_r>:
 800085c:	b538      	push	{r3, r4, r5, lr}
 800085e:	4d07      	ldr	r5, [pc, #28]	@ (800087c <_write_r+0x20>)
 8000860:	4604      	mov	r4, r0
 8000862:	4608      	mov	r0, r1
 8000864:	4611      	mov	r1, r2
 8000866:	2200      	movs	r2, #0
 8000868:	602a      	str	r2, [r5, #0]
 800086a:	461a      	mov	r2, r3
 800086c:	f7ff fcf3 	bl	8000256 <_write>
 8000870:	1c43      	adds	r3, r0, #1
 8000872:	d102      	bne.n	800087a <_write_r+0x1e>
 8000874:	682b      	ldr	r3, [r5, #0]
 8000876:	b103      	cbz	r3, 800087a <_write_r+0x1e>
 8000878:	6023      	str	r3, [r4, #0]
 800087a:	bd38      	pop	{r3, r4, r5, pc}
 800087c:	200001b8 	.word	0x200001b8

08000880 <__errno>:
 8000880:	4b01      	ldr	r3, [pc, #4]	@ (8000888 <__errno+0x8>)
 8000882:	6818      	ldr	r0, [r3, #0]
 8000884:	4770      	bx	lr
 8000886:	bf00      	nop
 8000888:	2000000c 	.word	0x2000000c

0800088c <__libc_init_array>:
 800088c:	b570      	push	{r4, r5, r6, lr}
 800088e:	4d0d      	ldr	r5, [pc, #52]	@ (80008c4 <__libc_init_array+0x38>)
 8000890:	4c0d      	ldr	r4, [pc, #52]	@ (80008c8 <__libc_init_array+0x3c>)
 8000892:	1b64      	subs	r4, r4, r5
 8000894:	10a4      	asrs	r4, r4, #2
 8000896:	2600      	movs	r6, #0
 8000898:	42a6      	cmp	r6, r4
 800089a:	d109      	bne.n	80008b0 <__libc_init_array+0x24>
 800089c:	4d0b      	ldr	r5, [pc, #44]	@ (80008cc <__libc_init_array+0x40>)
 800089e:	4c0c      	ldr	r4, [pc, #48]	@ (80008d0 <__libc_init_array+0x44>)
 80008a0:	f000 fa54 	bl	8000d4c <_init>
 80008a4:	1b64      	subs	r4, r4, r5
 80008a6:	10a4      	asrs	r4, r4, #2
 80008a8:	2600      	movs	r6, #0
 80008aa:	42a6      	cmp	r6, r4
 80008ac:	d105      	bne.n	80008ba <__libc_init_array+0x2e>
 80008ae:	bd70      	pop	{r4, r5, r6, pc}
 80008b0:	f855 3b04 	ldr.w	r3, [r5], #4
 80008b4:	4798      	blx	r3
 80008b6:	3601      	adds	r6, #1
 80008b8:	e7ee      	b.n	8000898 <__libc_init_array+0xc>
 80008ba:	f855 3b04 	ldr.w	r3, [r5], #4
 80008be:	4798      	blx	r3
 80008c0:	3601      	adds	r6, #1
 80008c2:	e7f2      	b.n	80008aa <__libc_init_array+0x1e>
 80008c4:	08000d78 	.word	0x08000d78
 80008c8:	08000d78 	.word	0x08000d78
 80008cc:	08000d78 	.word	0x08000d78
 80008d0:	08000d7c 	.word	0x08000d7c

080008d4 <__retarget_lock_init_recursive>:
 80008d4:	4770      	bx	lr

080008d6 <__retarget_lock_acquire_recursive>:
 80008d6:	4770      	bx	lr

080008d8 <__retarget_lock_release_recursive>:
 80008d8:	4770      	bx	lr
	...

080008dc <_free_r>:
 80008dc:	b538      	push	{r3, r4, r5, lr}
 80008de:	4605      	mov	r5, r0
 80008e0:	2900      	cmp	r1, #0
 80008e2:	d041      	beq.n	8000968 <_free_r+0x8c>
 80008e4:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80008e8:	1f0c      	subs	r4, r1, #4
 80008ea:	2b00      	cmp	r3, #0
 80008ec:	bfb8      	it	lt
 80008ee:	18e4      	addlt	r4, r4, r3
 80008f0:	f000 f8e0 	bl	8000ab4 <__malloc_lock>
 80008f4:	4a1d      	ldr	r2, [pc, #116]	@ (800096c <_free_r+0x90>)
 80008f6:	6813      	ldr	r3, [r2, #0]
 80008f8:	b933      	cbnz	r3, 8000908 <_free_r+0x2c>
 80008fa:	6063      	str	r3, [r4, #4]
 80008fc:	6014      	str	r4, [r2, #0]
 80008fe:	4628      	mov	r0, r5
 8000900:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000904:	f000 b8dc 	b.w	8000ac0 <__malloc_unlock>
 8000908:	42a3      	cmp	r3, r4
 800090a:	d908      	bls.n	800091e <_free_r+0x42>
 800090c:	6820      	ldr	r0, [r4, #0]
 800090e:	1821      	adds	r1, r4, r0
 8000910:	428b      	cmp	r3, r1
 8000912:	bf01      	itttt	eq
 8000914:	6819      	ldreq	r1, [r3, #0]
 8000916:	685b      	ldreq	r3, [r3, #4]
 8000918:	1809      	addeq	r1, r1, r0
 800091a:	6021      	streq	r1, [r4, #0]
 800091c:	e7ed      	b.n	80008fa <_free_r+0x1e>
 800091e:	461a      	mov	r2, r3
 8000920:	685b      	ldr	r3, [r3, #4]
 8000922:	b10b      	cbz	r3, 8000928 <_free_r+0x4c>
 8000924:	42a3      	cmp	r3, r4
 8000926:	d9fa      	bls.n	800091e <_free_r+0x42>
 8000928:	6811      	ldr	r1, [r2, #0]
 800092a:	1850      	adds	r0, r2, r1
 800092c:	42a0      	cmp	r0, r4
 800092e:	d10b      	bne.n	8000948 <_free_r+0x6c>
 8000930:	6820      	ldr	r0, [r4, #0]
 8000932:	4401      	add	r1, r0
 8000934:	1850      	adds	r0, r2, r1
 8000936:	4283      	cmp	r3, r0
 8000938:	6011      	str	r1, [r2, #0]
 800093a:	d1e0      	bne.n	80008fe <_free_r+0x22>
 800093c:	6818      	ldr	r0, [r3, #0]
 800093e:	685b      	ldr	r3, [r3, #4]
 8000940:	6053      	str	r3, [r2, #4]
 8000942:	4408      	add	r0, r1
 8000944:	6010      	str	r0, [r2, #0]
 8000946:	e7da      	b.n	80008fe <_free_r+0x22>
 8000948:	d902      	bls.n	8000950 <_free_r+0x74>
 800094a:	230c      	movs	r3, #12
 800094c:	602b      	str	r3, [r5, #0]
 800094e:	e7d6      	b.n	80008fe <_free_r+0x22>
 8000950:	6820      	ldr	r0, [r4, #0]
 8000952:	1821      	adds	r1, r4, r0
 8000954:	428b      	cmp	r3, r1
 8000956:	bf04      	itt	eq
 8000958:	6819      	ldreq	r1, [r3, #0]
 800095a:	685b      	ldreq	r3, [r3, #4]
 800095c:	6063      	str	r3, [r4, #4]
 800095e:	bf04      	itt	eq
 8000960:	1809      	addeq	r1, r1, r0
 8000962:	6021      	streq	r1, [r4, #0]
 8000964:	6054      	str	r4, [r2, #4]
 8000966:	e7ca      	b.n	80008fe <_free_r+0x22>
 8000968:	bd38      	pop	{r3, r4, r5, pc}
 800096a:	bf00      	nop
 800096c:	200001c4 	.word	0x200001c4

08000970 <sbrk_aligned>:
 8000970:	b570      	push	{r4, r5, r6, lr}
 8000972:	4e0f      	ldr	r6, [pc, #60]	@ (80009b0 <sbrk_aligned+0x40>)
 8000974:	460c      	mov	r4, r1
 8000976:	6831      	ldr	r1, [r6, #0]
 8000978:	4605      	mov	r5, r0
 800097a:	b911      	cbnz	r1, 8000982 <sbrk_aligned+0x12>
 800097c:	f000 f9d6 	bl	8000d2c <_sbrk_r>
 8000980:	6030      	str	r0, [r6, #0]
 8000982:	4621      	mov	r1, r4
 8000984:	4628      	mov	r0, r5
 8000986:	f000 f9d1 	bl	8000d2c <_sbrk_r>
 800098a:	1c43      	adds	r3, r0, #1
 800098c:	d103      	bne.n	8000996 <sbrk_aligned+0x26>
 800098e:	f04f 34ff 	mov.w	r4, #4294967295
 8000992:	4620      	mov	r0, r4
 8000994:	bd70      	pop	{r4, r5, r6, pc}
 8000996:	1cc4      	adds	r4, r0, #3
 8000998:	f024 0403 	bic.w	r4, r4, #3
 800099c:	42a0      	cmp	r0, r4
 800099e:	d0f8      	beq.n	8000992 <sbrk_aligned+0x22>
 80009a0:	1a21      	subs	r1, r4, r0
 80009a2:	4628      	mov	r0, r5
 80009a4:	f000 f9c2 	bl	8000d2c <_sbrk_r>
 80009a8:	3001      	adds	r0, #1
 80009aa:	d1f2      	bne.n	8000992 <sbrk_aligned+0x22>
 80009ac:	e7ef      	b.n	800098e <sbrk_aligned+0x1e>
 80009ae:	bf00      	nop
 80009b0:	200001c0 	.word	0x200001c0

080009b4 <_malloc_r>:
 80009b4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80009b8:	1ccd      	adds	r5, r1, #3
 80009ba:	f025 0503 	bic.w	r5, r5, #3
 80009be:	3508      	adds	r5, #8
 80009c0:	2d0c      	cmp	r5, #12
 80009c2:	bf38      	it	cc
 80009c4:	250c      	movcc	r5, #12
 80009c6:	2d00      	cmp	r5, #0
 80009c8:	4606      	mov	r6, r0
 80009ca:	db01      	blt.n	80009d0 <_malloc_r+0x1c>
 80009cc:	42a9      	cmp	r1, r5
 80009ce:	d904      	bls.n	80009da <_malloc_r+0x26>
 80009d0:	230c      	movs	r3, #12
 80009d2:	6033      	str	r3, [r6, #0]
 80009d4:	2000      	movs	r0, #0
 80009d6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80009da:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8000ab0 <_malloc_r+0xfc>
 80009de:	f000 f869 	bl	8000ab4 <__malloc_lock>
 80009e2:	f8d8 3000 	ldr.w	r3, [r8]
 80009e6:	461c      	mov	r4, r3
 80009e8:	bb44      	cbnz	r4, 8000a3c <_malloc_r+0x88>
 80009ea:	4629      	mov	r1, r5
 80009ec:	4630      	mov	r0, r6
 80009ee:	f7ff ffbf 	bl	8000970 <sbrk_aligned>
 80009f2:	1c43      	adds	r3, r0, #1
 80009f4:	4604      	mov	r4, r0
 80009f6:	d158      	bne.n	8000aaa <_malloc_r+0xf6>
 80009f8:	f8d8 4000 	ldr.w	r4, [r8]
 80009fc:	4627      	mov	r7, r4
 80009fe:	2f00      	cmp	r7, #0
 8000a00:	d143      	bne.n	8000a8a <_malloc_r+0xd6>
 8000a02:	2c00      	cmp	r4, #0
 8000a04:	d04b      	beq.n	8000a9e <_malloc_r+0xea>
 8000a06:	6823      	ldr	r3, [r4, #0]
 8000a08:	4639      	mov	r1, r7
 8000a0a:	4630      	mov	r0, r6
 8000a0c:	eb04 0903 	add.w	r9, r4, r3
 8000a10:	f000 f98c 	bl	8000d2c <_sbrk_r>
 8000a14:	4581      	cmp	r9, r0
 8000a16:	d142      	bne.n	8000a9e <_malloc_r+0xea>
 8000a18:	6821      	ldr	r1, [r4, #0]
 8000a1a:	1a6d      	subs	r5, r5, r1
 8000a1c:	4629      	mov	r1, r5
 8000a1e:	4630      	mov	r0, r6
 8000a20:	f7ff ffa6 	bl	8000970 <sbrk_aligned>
 8000a24:	3001      	adds	r0, #1
 8000a26:	d03a      	beq.n	8000a9e <_malloc_r+0xea>
 8000a28:	6823      	ldr	r3, [r4, #0]
 8000a2a:	442b      	add	r3, r5
 8000a2c:	6023      	str	r3, [r4, #0]
 8000a2e:	f8d8 3000 	ldr.w	r3, [r8]
 8000a32:	685a      	ldr	r2, [r3, #4]
 8000a34:	bb62      	cbnz	r2, 8000a90 <_malloc_r+0xdc>
 8000a36:	f8c8 7000 	str.w	r7, [r8]
 8000a3a:	e00f      	b.n	8000a5c <_malloc_r+0xa8>
 8000a3c:	6822      	ldr	r2, [r4, #0]
 8000a3e:	1b52      	subs	r2, r2, r5
 8000a40:	d420      	bmi.n	8000a84 <_malloc_r+0xd0>
 8000a42:	2a0b      	cmp	r2, #11
 8000a44:	d917      	bls.n	8000a76 <_malloc_r+0xc2>
 8000a46:	1961      	adds	r1, r4, r5
 8000a48:	42a3      	cmp	r3, r4
 8000a4a:	6025      	str	r5, [r4, #0]
 8000a4c:	bf18      	it	ne
 8000a4e:	6059      	strne	r1, [r3, #4]
 8000a50:	6863      	ldr	r3, [r4, #4]
 8000a52:	bf08      	it	eq
 8000a54:	f8c8 1000 	streq.w	r1, [r8]
 8000a58:	5162      	str	r2, [r4, r5]
 8000a5a:	604b      	str	r3, [r1, #4]
 8000a5c:	4630      	mov	r0, r6
 8000a5e:	f000 f82f 	bl	8000ac0 <__malloc_unlock>
 8000a62:	f104 000b 	add.w	r0, r4, #11
 8000a66:	1d23      	adds	r3, r4, #4
 8000a68:	f020 0007 	bic.w	r0, r0, #7
 8000a6c:	1ac2      	subs	r2, r0, r3
 8000a6e:	bf1c      	itt	ne
 8000a70:	1a1b      	subne	r3, r3, r0
 8000a72:	50a3      	strne	r3, [r4, r2]
 8000a74:	e7af      	b.n	80009d6 <_malloc_r+0x22>
 8000a76:	6862      	ldr	r2, [r4, #4]
 8000a78:	42a3      	cmp	r3, r4
 8000a7a:	bf0c      	ite	eq
 8000a7c:	f8c8 2000 	streq.w	r2, [r8]
 8000a80:	605a      	strne	r2, [r3, #4]
 8000a82:	e7eb      	b.n	8000a5c <_malloc_r+0xa8>
 8000a84:	4623      	mov	r3, r4
 8000a86:	6864      	ldr	r4, [r4, #4]
 8000a88:	e7ae      	b.n	80009e8 <_malloc_r+0x34>
 8000a8a:	463c      	mov	r4, r7
 8000a8c:	687f      	ldr	r7, [r7, #4]
 8000a8e:	e7b6      	b.n	80009fe <_malloc_r+0x4a>
 8000a90:	461a      	mov	r2, r3
 8000a92:	685b      	ldr	r3, [r3, #4]
 8000a94:	42a3      	cmp	r3, r4
 8000a96:	d1fb      	bne.n	8000a90 <_malloc_r+0xdc>
 8000a98:	2300      	movs	r3, #0
 8000a9a:	6053      	str	r3, [r2, #4]
 8000a9c:	e7de      	b.n	8000a5c <_malloc_r+0xa8>
 8000a9e:	230c      	movs	r3, #12
 8000aa0:	6033      	str	r3, [r6, #0]
 8000aa2:	4630      	mov	r0, r6
 8000aa4:	f000 f80c 	bl	8000ac0 <__malloc_unlock>
 8000aa8:	e794      	b.n	80009d4 <_malloc_r+0x20>
 8000aaa:	6005      	str	r5, [r0, #0]
 8000aac:	e7d6      	b.n	8000a5c <_malloc_r+0xa8>
 8000aae:	bf00      	nop
 8000ab0:	200001c4 	.word	0x200001c4

08000ab4 <__malloc_lock>:
 8000ab4:	4801      	ldr	r0, [pc, #4]	@ (8000abc <__malloc_lock+0x8>)
 8000ab6:	f7ff bf0e 	b.w	80008d6 <__retarget_lock_acquire_recursive>
 8000aba:	bf00      	nop
 8000abc:	200001bc 	.word	0x200001bc

08000ac0 <__malloc_unlock>:
 8000ac0:	4801      	ldr	r0, [pc, #4]	@ (8000ac8 <__malloc_unlock+0x8>)
 8000ac2:	f7ff bf09 	b.w	80008d8 <__retarget_lock_release_recursive>
 8000ac6:	bf00      	nop
 8000ac8:	200001bc 	.word	0x200001bc

08000acc <__sflush_r>:
 8000acc:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8000ad0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000ad4:	0716      	lsls	r6, r2, #28
 8000ad6:	4605      	mov	r5, r0
 8000ad8:	460c      	mov	r4, r1
 8000ada:	d454      	bmi.n	8000b86 <__sflush_r+0xba>
 8000adc:	684b      	ldr	r3, [r1, #4]
 8000ade:	2b00      	cmp	r3, #0
 8000ae0:	dc02      	bgt.n	8000ae8 <__sflush_r+0x1c>
 8000ae2:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8000ae4:	2b00      	cmp	r3, #0
 8000ae6:	dd48      	ble.n	8000b7a <__sflush_r+0xae>
 8000ae8:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8000aea:	2e00      	cmp	r6, #0
 8000aec:	d045      	beq.n	8000b7a <__sflush_r+0xae>
 8000aee:	2300      	movs	r3, #0
 8000af0:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8000af4:	682f      	ldr	r7, [r5, #0]
 8000af6:	6a21      	ldr	r1, [r4, #32]
 8000af8:	602b      	str	r3, [r5, #0]
 8000afa:	d030      	beq.n	8000b5e <__sflush_r+0x92>
 8000afc:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8000afe:	89a3      	ldrh	r3, [r4, #12]
 8000b00:	0759      	lsls	r1, r3, #29
 8000b02:	d505      	bpl.n	8000b10 <__sflush_r+0x44>
 8000b04:	6863      	ldr	r3, [r4, #4]
 8000b06:	1ad2      	subs	r2, r2, r3
 8000b08:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8000b0a:	b10b      	cbz	r3, 8000b10 <__sflush_r+0x44>
 8000b0c:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8000b0e:	1ad2      	subs	r2, r2, r3
 8000b10:	2300      	movs	r3, #0
 8000b12:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8000b14:	6a21      	ldr	r1, [r4, #32]
 8000b16:	4628      	mov	r0, r5
 8000b18:	47b0      	blx	r6
 8000b1a:	1c43      	adds	r3, r0, #1
 8000b1c:	89a3      	ldrh	r3, [r4, #12]
 8000b1e:	d106      	bne.n	8000b2e <__sflush_r+0x62>
 8000b20:	6829      	ldr	r1, [r5, #0]
 8000b22:	291d      	cmp	r1, #29
 8000b24:	d82b      	bhi.n	8000b7e <__sflush_r+0xb2>
 8000b26:	4a2a      	ldr	r2, [pc, #168]	@ (8000bd0 <__sflush_r+0x104>)
 8000b28:	410a      	asrs	r2, r1
 8000b2a:	07d6      	lsls	r6, r2, #31
 8000b2c:	d427      	bmi.n	8000b7e <__sflush_r+0xb2>
 8000b2e:	2200      	movs	r2, #0
 8000b30:	6062      	str	r2, [r4, #4]
 8000b32:	04d9      	lsls	r1, r3, #19
 8000b34:	6922      	ldr	r2, [r4, #16]
 8000b36:	6022      	str	r2, [r4, #0]
 8000b38:	d504      	bpl.n	8000b44 <__sflush_r+0x78>
 8000b3a:	1c42      	adds	r2, r0, #1
 8000b3c:	d101      	bne.n	8000b42 <__sflush_r+0x76>
 8000b3e:	682b      	ldr	r3, [r5, #0]
 8000b40:	b903      	cbnz	r3, 8000b44 <__sflush_r+0x78>
 8000b42:	6560      	str	r0, [r4, #84]	@ 0x54
 8000b44:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8000b46:	602f      	str	r7, [r5, #0]
 8000b48:	b1b9      	cbz	r1, 8000b7a <__sflush_r+0xae>
 8000b4a:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8000b4e:	4299      	cmp	r1, r3
 8000b50:	d002      	beq.n	8000b58 <__sflush_r+0x8c>
 8000b52:	4628      	mov	r0, r5
 8000b54:	f7ff fec2 	bl	80008dc <_free_r>
 8000b58:	2300      	movs	r3, #0
 8000b5a:	6363      	str	r3, [r4, #52]	@ 0x34
 8000b5c:	e00d      	b.n	8000b7a <__sflush_r+0xae>
 8000b5e:	2301      	movs	r3, #1
 8000b60:	4628      	mov	r0, r5
 8000b62:	47b0      	blx	r6
 8000b64:	4602      	mov	r2, r0
 8000b66:	1c50      	adds	r0, r2, #1
 8000b68:	d1c9      	bne.n	8000afe <__sflush_r+0x32>
 8000b6a:	682b      	ldr	r3, [r5, #0]
 8000b6c:	2b00      	cmp	r3, #0
 8000b6e:	d0c6      	beq.n	8000afe <__sflush_r+0x32>
 8000b70:	2b1d      	cmp	r3, #29
 8000b72:	d001      	beq.n	8000b78 <__sflush_r+0xac>
 8000b74:	2b16      	cmp	r3, #22
 8000b76:	d11e      	bne.n	8000bb6 <__sflush_r+0xea>
 8000b78:	602f      	str	r7, [r5, #0]
 8000b7a:	2000      	movs	r0, #0
 8000b7c:	e022      	b.n	8000bc4 <__sflush_r+0xf8>
 8000b7e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000b82:	b21b      	sxth	r3, r3
 8000b84:	e01b      	b.n	8000bbe <__sflush_r+0xf2>
 8000b86:	690f      	ldr	r7, [r1, #16]
 8000b88:	2f00      	cmp	r7, #0
 8000b8a:	d0f6      	beq.n	8000b7a <__sflush_r+0xae>
 8000b8c:	0793      	lsls	r3, r2, #30
 8000b8e:	680e      	ldr	r6, [r1, #0]
 8000b90:	bf08      	it	eq
 8000b92:	694b      	ldreq	r3, [r1, #20]
 8000b94:	600f      	str	r7, [r1, #0]
 8000b96:	bf18      	it	ne
 8000b98:	2300      	movne	r3, #0
 8000b9a:	eba6 0807 	sub.w	r8, r6, r7
 8000b9e:	608b      	str	r3, [r1, #8]
 8000ba0:	f1b8 0f00 	cmp.w	r8, #0
 8000ba4:	dde9      	ble.n	8000b7a <__sflush_r+0xae>
 8000ba6:	6a21      	ldr	r1, [r4, #32]
 8000ba8:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 8000baa:	4643      	mov	r3, r8
 8000bac:	463a      	mov	r2, r7
 8000bae:	4628      	mov	r0, r5
 8000bb0:	47b0      	blx	r6
 8000bb2:	2800      	cmp	r0, #0
 8000bb4:	dc08      	bgt.n	8000bc8 <__sflush_r+0xfc>
 8000bb6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000bba:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000bbe:	81a3      	strh	r3, [r4, #12]
 8000bc0:	f04f 30ff 	mov.w	r0, #4294967295
 8000bc4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000bc8:	4407      	add	r7, r0
 8000bca:	eba8 0800 	sub.w	r8, r8, r0
 8000bce:	e7e7      	b.n	8000ba0 <__sflush_r+0xd4>
 8000bd0:	dfbffffe 	.word	0xdfbffffe

08000bd4 <_fflush_r>:
 8000bd4:	b538      	push	{r3, r4, r5, lr}
 8000bd6:	690b      	ldr	r3, [r1, #16]
 8000bd8:	4605      	mov	r5, r0
 8000bda:	460c      	mov	r4, r1
 8000bdc:	b913      	cbnz	r3, 8000be4 <_fflush_r+0x10>
 8000bde:	2500      	movs	r5, #0
 8000be0:	4628      	mov	r0, r5
 8000be2:	bd38      	pop	{r3, r4, r5, pc}
 8000be4:	b118      	cbz	r0, 8000bee <_fflush_r+0x1a>
 8000be6:	6a03      	ldr	r3, [r0, #32]
 8000be8:	b90b      	cbnz	r3, 8000bee <_fflush_r+0x1a>
 8000bea:	f7ff fc8f 	bl	800050c <__sinit>
 8000bee:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000bf2:	2b00      	cmp	r3, #0
 8000bf4:	d0f3      	beq.n	8000bde <_fflush_r+0xa>
 8000bf6:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8000bf8:	07d0      	lsls	r0, r2, #31
 8000bfa:	d404      	bmi.n	8000c06 <_fflush_r+0x32>
 8000bfc:	0599      	lsls	r1, r3, #22
 8000bfe:	d402      	bmi.n	8000c06 <_fflush_r+0x32>
 8000c00:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8000c02:	f7ff fe68 	bl	80008d6 <__retarget_lock_acquire_recursive>
 8000c06:	4628      	mov	r0, r5
 8000c08:	4621      	mov	r1, r4
 8000c0a:	f7ff ff5f 	bl	8000acc <__sflush_r>
 8000c0e:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8000c10:	07da      	lsls	r2, r3, #31
 8000c12:	4605      	mov	r5, r0
 8000c14:	d4e4      	bmi.n	8000be0 <_fflush_r+0xc>
 8000c16:	89a3      	ldrh	r3, [r4, #12]
 8000c18:	059b      	lsls	r3, r3, #22
 8000c1a:	d4e1      	bmi.n	8000be0 <_fflush_r+0xc>
 8000c1c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8000c1e:	f7ff fe5b 	bl	80008d8 <__retarget_lock_release_recursive>
 8000c22:	e7dd      	b.n	8000be0 <_fflush_r+0xc>

08000c24 <__swhatbuf_r>:
 8000c24:	b570      	push	{r4, r5, r6, lr}
 8000c26:	460c      	mov	r4, r1
 8000c28:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000c2c:	2900      	cmp	r1, #0
 8000c2e:	b096      	sub	sp, #88	@ 0x58
 8000c30:	4615      	mov	r5, r2
 8000c32:	461e      	mov	r6, r3
 8000c34:	da0d      	bge.n	8000c52 <__swhatbuf_r+0x2e>
 8000c36:	89a3      	ldrh	r3, [r4, #12]
 8000c38:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8000c3c:	f04f 0100 	mov.w	r1, #0
 8000c40:	bf14      	ite	ne
 8000c42:	2340      	movne	r3, #64	@ 0x40
 8000c44:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8000c48:	2000      	movs	r0, #0
 8000c4a:	6031      	str	r1, [r6, #0]
 8000c4c:	602b      	str	r3, [r5, #0]
 8000c4e:	b016      	add	sp, #88	@ 0x58
 8000c50:	bd70      	pop	{r4, r5, r6, pc}
 8000c52:	466a      	mov	r2, sp
 8000c54:	f000 f848 	bl	8000ce8 <_fstat_r>
 8000c58:	2800      	cmp	r0, #0
 8000c5a:	dbec      	blt.n	8000c36 <__swhatbuf_r+0x12>
 8000c5c:	9901      	ldr	r1, [sp, #4]
 8000c5e:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8000c62:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8000c66:	4259      	negs	r1, r3
 8000c68:	4159      	adcs	r1, r3
 8000c6a:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8000c6e:	e7eb      	b.n	8000c48 <__swhatbuf_r+0x24>

08000c70 <__smakebuf_r>:
 8000c70:	898b      	ldrh	r3, [r1, #12]
 8000c72:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8000c74:	079d      	lsls	r5, r3, #30
 8000c76:	4606      	mov	r6, r0
 8000c78:	460c      	mov	r4, r1
 8000c7a:	d507      	bpl.n	8000c8c <__smakebuf_r+0x1c>
 8000c7c:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8000c80:	6023      	str	r3, [r4, #0]
 8000c82:	6123      	str	r3, [r4, #16]
 8000c84:	2301      	movs	r3, #1
 8000c86:	6163      	str	r3, [r4, #20]
 8000c88:	b003      	add	sp, #12
 8000c8a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000c8c:	ab01      	add	r3, sp, #4
 8000c8e:	466a      	mov	r2, sp
 8000c90:	f7ff ffc8 	bl	8000c24 <__swhatbuf_r>
 8000c94:	9f00      	ldr	r7, [sp, #0]
 8000c96:	4605      	mov	r5, r0
 8000c98:	4639      	mov	r1, r7
 8000c9a:	4630      	mov	r0, r6
 8000c9c:	f7ff fe8a 	bl	80009b4 <_malloc_r>
 8000ca0:	b948      	cbnz	r0, 8000cb6 <__smakebuf_r+0x46>
 8000ca2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000ca6:	059a      	lsls	r2, r3, #22
 8000ca8:	d4ee      	bmi.n	8000c88 <__smakebuf_r+0x18>
 8000caa:	f023 0303 	bic.w	r3, r3, #3
 8000cae:	f043 0302 	orr.w	r3, r3, #2
 8000cb2:	81a3      	strh	r3, [r4, #12]
 8000cb4:	e7e2      	b.n	8000c7c <__smakebuf_r+0xc>
 8000cb6:	89a3      	ldrh	r3, [r4, #12]
 8000cb8:	6020      	str	r0, [r4, #0]
 8000cba:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8000cbe:	81a3      	strh	r3, [r4, #12]
 8000cc0:	9b01      	ldr	r3, [sp, #4]
 8000cc2:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8000cc6:	b15b      	cbz	r3, 8000ce0 <__smakebuf_r+0x70>
 8000cc8:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000ccc:	4630      	mov	r0, r6
 8000cce:	f000 f81d 	bl	8000d0c <_isatty_r>
 8000cd2:	b128      	cbz	r0, 8000ce0 <__smakebuf_r+0x70>
 8000cd4:	89a3      	ldrh	r3, [r4, #12]
 8000cd6:	f023 0303 	bic.w	r3, r3, #3
 8000cda:	f043 0301 	orr.w	r3, r3, #1
 8000cde:	81a3      	strh	r3, [r4, #12]
 8000ce0:	89a3      	ldrh	r3, [r4, #12]
 8000ce2:	431d      	orrs	r5, r3
 8000ce4:	81a5      	strh	r5, [r4, #12]
 8000ce6:	e7cf      	b.n	8000c88 <__smakebuf_r+0x18>

08000ce8 <_fstat_r>:
 8000ce8:	b538      	push	{r3, r4, r5, lr}
 8000cea:	4d07      	ldr	r5, [pc, #28]	@ (8000d08 <_fstat_r+0x20>)
 8000cec:	2300      	movs	r3, #0
 8000cee:	4604      	mov	r4, r0
 8000cf0:	4608      	mov	r0, r1
 8000cf2:	4611      	mov	r1, r2
 8000cf4:	602b      	str	r3, [r5, #0]
 8000cf6:	f7ff fad6 	bl	80002a6 <_fstat>
 8000cfa:	1c43      	adds	r3, r0, #1
 8000cfc:	d102      	bne.n	8000d04 <_fstat_r+0x1c>
 8000cfe:	682b      	ldr	r3, [r5, #0]
 8000d00:	b103      	cbz	r3, 8000d04 <_fstat_r+0x1c>
 8000d02:	6023      	str	r3, [r4, #0]
 8000d04:	bd38      	pop	{r3, r4, r5, pc}
 8000d06:	bf00      	nop
 8000d08:	200001b8 	.word	0x200001b8

08000d0c <_isatty_r>:
 8000d0c:	b538      	push	{r3, r4, r5, lr}
 8000d0e:	4d06      	ldr	r5, [pc, #24]	@ (8000d28 <_isatty_r+0x1c>)
 8000d10:	2300      	movs	r3, #0
 8000d12:	4604      	mov	r4, r0
 8000d14:	4608      	mov	r0, r1
 8000d16:	602b      	str	r3, [r5, #0]
 8000d18:	f7ff fad5 	bl	80002c6 <_isatty>
 8000d1c:	1c43      	adds	r3, r0, #1
 8000d1e:	d102      	bne.n	8000d26 <_isatty_r+0x1a>
 8000d20:	682b      	ldr	r3, [r5, #0]
 8000d22:	b103      	cbz	r3, 8000d26 <_isatty_r+0x1a>
 8000d24:	6023      	str	r3, [r4, #0]
 8000d26:	bd38      	pop	{r3, r4, r5, pc}
 8000d28:	200001b8 	.word	0x200001b8

08000d2c <_sbrk_r>:
 8000d2c:	b538      	push	{r3, r4, r5, lr}
 8000d2e:	4d06      	ldr	r5, [pc, #24]	@ (8000d48 <_sbrk_r+0x1c>)
 8000d30:	2300      	movs	r3, #0
 8000d32:	4604      	mov	r4, r0
 8000d34:	4608      	mov	r0, r1
 8000d36:	602b      	str	r3, [r5, #0]
 8000d38:	f7ff fade 	bl	80002f8 <_sbrk>
 8000d3c:	1c43      	adds	r3, r0, #1
 8000d3e:	d102      	bne.n	8000d46 <_sbrk_r+0x1a>
 8000d40:	682b      	ldr	r3, [r5, #0]
 8000d42:	b103      	cbz	r3, 8000d46 <_sbrk_r+0x1a>
 8000d44:	6023      	str	r3, [r4, #0]
 8000d46:	bd38      	pop	{r3, r4, r5, pc}
 8000d48:	200001b8 	.word	0x200001b8

08000d4c <_init>:
 8000d4c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000d4e:	bf00      	nop
 8000d50:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000d52:	bc08      	pop	{r3}
 8000d54:	469e      	mov	lr, r3
 8000d56:	4770      	bx	lr

08000d58 <_fini>:
 8000d58:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000d5a:	bf00      	nop
 8000d5c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000d5e:	bc08      	pop	{r3}
 8000d60:	469e      	mov	lr, r3
 8000d62:	4770      	bx	lr
